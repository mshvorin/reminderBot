name: Build, Test, and Deploy to AWS ECS

on:
  push:
    branches:
      - main  # Triggers the workflow on pushes to the main branch

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3  # Latest stable v3

      # 2. Set up Python (if your project uses Python)
      - name: Set up Python
        uses: actions/setup-python@v4  # Latest stable v4
        with:
          python-version: '3.9'  # Specify your Python version

      # 3. Cache pip dependencies (optional but recommended)
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4. Install dependencies
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # 5. Run tests (optional but recommended)
      - name: Run tests
        run: |
          pytest  # Ensure you have tests set up with pytest

      # 6. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2  # Correct version
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 7. Log in to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1  # Correct version

      # 8. Build, tag, and push Docker image to ECR
      - name: Build, tag, and push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # 9. Register and deploy ECS task definition
      - name: Register and deploy ECS task definition
        id: deploy-ecs
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2  # Correct version
        with:
          task-definition: ${{ secrets.TASK_DEFINITION }}
          service: ${{ secrets.SERVICE }}
          cluster: ${{ secrets.CLUSTER }}
          image: discord-bot=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
          wait-for-service-stability: true
